ortelius-generic-microservice:
  appName:               # required - the name of the application (e.g., demo-webserver)
  capability:            # required - the name of the capability (e.g., abs)
  deploymentVersion:     # optional - the version of the deployment, may be used to force the redeployment of pods (e.g. 1, 2, 1.0.0)

  imageOverride:         # optional - possibility to override the name of the Docker image (default: <capability>/<appName>)

  configMapRef:          # optional - list of configmaps to inject environment variables from, see section "setting environment variables" (the name of the configmap will go here)

  port:                  # optional - the HTTP port the application container should expose (default: 8080)
  servicePorts:          # optional - list of additional ports to be exposed in the service
  - name:                # required - name of the port (NOTE: Istio chooses the protocol based on the name if appProtocol is not provided, see https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/)
    number:              # required - the port number
    appProtocol:         # optional - the app protocol (e.g., used by Istio to determine protocol, see https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/)
  additionalPorts:       # optional - list of additional ports the pod should expose (e. g. for debugging purposes); these are not exposed in the service

  persistence:
    stateful:             # optional - switch to use a StatefulSet instead of a Deployment; this improves upgrade behavior for applications with Persistent Volume Claims (default: false)
    volumeClaimTemplates: # optional - specify list of volumeClaimTemplates for the statefulset
      - name:             #   for each volumeClaimTemplate specify name (to be referenced in mount.volumeMounts)
        size:             #   and size (e.G. 10Gi)

  podDisruptionBudget:
    enabled:             # optional - switch to create a PodDisruptionBudget (default: true)

  nginxIngress:
    enabled:             # optional - switch to enable nginx ingress (default: false)
    hosts:               # required - list of external hostnames of the application
    - hostname:          # required - external hostname of the application
      secret:            # optional - name of the TLS secret containing a valid certificate for the hostname, which must be present in the namespace (default: <hostname>-tls)
    proxyBodySize:       # optional - configures maximum body size (default: 1m)
    proxyBufferSize:     # optional - configures maximum buffer size, e.g. for response headers (default: 4k)

  externalNginxIngress:
    enabled:             # optional - switch to enable external nginx ingress (default: false)
    hosts:               # required - list of external hostnames of the application
    - hostname:          # required - external hostname of the application
      path:              # optional - path prefix for path based routing (default: /)
      secret:            # optional - name of the TLS secret containing a valid certificate for the hostname, which must be present in the namespace (default: <hostname>-tls)
    host:                # deprecated, use hosts instead - external hostname of the application. A TLS secret <appName>-tls with a valid certificate for this hostname must be present in the namespace.
    proxyBodySize:       # optional - configures maximum body size (default: 1m)
    proxyBufferSize:     # optional - configures maximum buffer size, e.g. for response headers (default: 4k)
    rewriteTarget:       # optional - switch to configure a rewrite rule to remove the path prefix (default: false). For example, if path prefix is "/abc" and the actual path is "/abc/def", then the path header will be set to "/def")

  istio:
    enabled:             # optional - switch to enable ingress via Istio (default: true)
    hosts:               # required - list of external hostnames of the application
    - hostname:          # required - external hostname of the application
    corsPolicy:          # optional - set if you need to set a corsPolicy in the virtualservice, see https://istio.io/latest/docs/reference/config/networking/virtual-service/#CorsPolicy
    rewrite_rules:       # optional - a list of dictionaries, available since version 1.10.1 . Needed only if you need to introduce some simple rewrites like /  --> /your/favourite/context. Multiple rewrite rules can be cascaded, but it makes your life complex if its not proper, refer - https://istio.io/latest/docs/reference/config/networking/virtual-service/#HTTPRewrite
    - name:              # (required if  rewrite_rules included) just a name for the rule, use a meaningful name.
      regex:             # (required if  rewrite_rules included) to match your source context from which rewrite should be invoked.
      rewrite:           # (required if  rewrite_rules included) the destination context where your desired output is expected.

  vault:
    enabled:             # optional - switch to enable Vault secret injection (default: false)
    roleOverride:        # optional - possibility to override the role used for authentication (default: <capability>-<stage>-<appName>)
    stageOverride:       # optional - possibility to override the stage segment of the role used for authentication (default: <capability>-<stage>-<appName>)
    secrets:             # optional - list of secrets with corresponding keys, see section "Configuring Vault secret injection"

  dynatrace:
    groupname:           # optional - value for the HOST_GROUP_NAME (defaults to appName without dashes, prefixed with 'az-tech-acmcloud-')


  dtTags:
    enabled:             # optional - to add custom dynatrace tags (default: false)
    tags:               # Custom tags eg: tags: Enviornment=noAlert Enviornment=Alert

  readinessProbe:
    enabled:             # optional - switch to enable http request readiness probe (default: true)
    path:                # optional - path to send http request to (default "actuator/health")
    initialDelaySeconds: # optional - default 60
    periodSeconds:       # optional - default 10
    timeoutSeconds:      # optional - default 5
  livenessProbe:
    enabled:             # optional - switch to enable http request liveness probe (default: true)
    path:                # optional - path to send http request to (default "actuator/info")
    initialDelaySeconds: # optional - default 60
    periodSeconds:       # optional - default 10
    timeoutSeconds:      # optional - default 5
  updateStrategy:        # optional - yaml block to override update strategy of the deployment, see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
                         # default is rolling update with maxUnavailable: 0 and maxSurge: 25%
  annotations:           # optional - any additional annotations that should be added to the deployment
  terminationGracePeriodSeconds: # optional - default 30

  uniqueOidcRole:        # optional - boolean, default false. Need to use only when if you need to create and use unique oidc role
                         # since version 1.22.2

  autoscaling:
    enabled:             # optional - switch to enable autoscaling (default: false)
    minReplicas:         # optional - minimum replica count (default: 1)
    maxReplicas:         # optional - maximum replica count (default: 1)
    targetCPUPercentage: # optional - target CPU percentage (default: 80)

  filebeat:
    enabled:             # optional - switch to enable filebeat sidecar (default: false)
    logstashService:     # optional - name of the logstash service (default: logstash)
    logstashPort:        # optional - port number of the beats port of the logstash service (default: 5044)
    logstashReplicas:    # optional - number of replicas of the logstash service; this is used for load-balancing to the individual logstash instances
                         #            NOTE: Requires acm-generic-logstash Helm chart version 2.0.0 or newer
    logFilePath:         # optional - directory containing the log files to forward (default: /var/log/allianz); will be mounted in the application container
    logFilePattern:      # optional - pattern of the log files to forward (default: *.log)
