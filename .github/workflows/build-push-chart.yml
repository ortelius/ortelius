name: Build/Push Image and Release Charts
'on':
  push:
    branches:
      - main
    paths-ignore:
      - chart/**
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DHURL: https://console.deployhub.com
      DHUSER: ${{ secrets.DHUSER }}
      DHPASS: ${{ secrets.DHPASS }}
      REGISTRY: quay.io
    permissions:
      id-token: write
      security-events: write
      contents: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3
        with:
          version: v0.13.0-rc1

      - name: Checkout
        id: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: ${{ secrets.ORTELIUS_CHART_PAT }}
          fetch-depth: 0

      - name: Set Convenience Env Vars and Tools
        id: env
        run: |
          echo "CHART_VERSION=10.0.${{ github.run_number }}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=10.0.${{ github.run_number }}-g$(echo ${{ github.sha }} | cut -c 1-6)" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.head_ref || github.ref_name }}-v10.0.${{ github.run_number }}-g$(echo ${{ github.sha }} | cut -c 1-6)" >> $GITHUB_ENV

          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b .
          sudo go install github.com/mikefarah/yq/v4@latest
          pip install ortelius-cli

      - name: Configure Git
        id: git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Login to Quay
        id: login
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERID }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: UI Build and Push Docker Image
        id: build_ui
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
        with:
          push: true
          file: docker/DockerfileUI
          tags: ${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64
          attests: type=provenance,type=sbom
          
      - name: Sign the images
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}@${{ steps.build_ui.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Verify the pushed tags
        run: |
          cosign verify ${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}@${{ steps.build_ui.outputs.digest }} --certificate-identity-regexp '.*' --certificate-oidc-issuer-regexp '.*' | jq "."
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: UI Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f055b5e672ed1ea4fd98a276788e4bcb5a64ad17
        if: always()
        with:
          category: ui
          sarif_file: trivy-results.sarif

      - name: UI Generate SBOM
        id: sbom_ui
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          if [ "$(docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}" --raw | jq -r '.manifests | map(select(.platform.architecture != "unknown")) | length')" -eq 1 ]; then
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}" --format "{{ json .SBOM.SPDX }}" > /tmp/spdx.json
          else
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-ui:${{ env.IMAGE_TAG }}" --format '{{ json (index .SBOM "linux/amd64").SPDX}}' > /tmp/spdx.json
          fi
          syft convert /tmp/spdx.json -o cyclonedx-json=/tmp/cyclonedx.json        

      - name: UI Update Values and Chart
        id: chart_ui
        run: |
          yq e '.image.repository |= "${{ env.REGISTRY }}/ortelius/ms-ui"' -i chart/ms-ui/values.yaml
          yq e '.image.tag |= "${{ env.IMAGE_TAG }}"' -i chart/ms-ui/values.yaml
          yq e '.image.sha |= "${{ steps.build_ui.outputs.digest }}"' -i chart/ms-ui/values.yaml
          yq e '.version |= "${{ env.CHART_VERSION }}"' -i chart/ms-ui/Chart.yaml
          yq e '.appVersion |= "${{ env.CHART_VERSION }}"' -i chart/ms-ui/Chart.yaml
          echo "DIGEST=${{ steps.build_ui.outputs.digest }}" >> $GITHUB_ENV

      - name: UI Update Compnent
        id: updatecomp_ui
        run: |
          export COMPNAME=ms-ui
          dh envscript --envvars component.toml --envvars_sh env.sh
          source env.sh
          dh updatecomp --rsp component.toml --deppkg cyclonedx@/tmp/cyclonedx.json

      - name: General Build and Push Docker Image
        id: build_gen
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
        with:
          push: true
          file: docker/DockerfileGeneral
          tags: ${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64
          attests: type=provenance,type=sbom   
          
      - name: Sign the images
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}@${{ steps.build_gen.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
  
      - name: Verify the pushed tags
        run: |
          cosign verify ${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}@${{ steps.build_gen.outputs.digest }} --certificate-identity-regexp '.*' --certificate-oidc-issuer-regexp '.*' | jq "."
        env:
          COSIGN_EXPERIMENTAL: 1          

      - name: General Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f055b5e672ed1ea4fd98a276788e4bcb5a64ad17
        if: always()
        with:
          category: general
          sarif_file: trivy-results.sarif

      - name: General Generate SBOM
        id: sbom_gen
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          if [ "$(docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}" --raw | jq -r '.manifests | map(select(.platform.architecture != "unknown")) | length')" -eq 1 ]; then
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}" --format "{{ json .SBOM.SPDX }}" > /tmp/spdx.json
          else
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-general:${{ env.IMAGE_TAG }}" --format '{{ json (index .SBOM "linux/amd64").SPDX}}' > /tmp/spdx.json
          fi
          syft convert /tmp/spdx.json -o cyclonedx-json=/tmp/cyclonedx.json            

      - name: General Update Values and Chart
        id: chart_gen
        run: |
          yq e '.image.repository |= "${{ env.REGISTRY }}/ortelius/ms-general"' -i chart/ms-general/values.yaml
          yq e '.image.tag |= "${{ env.IMAGE_TAG }}"' -i chart/ms-general/values.yaml
          yq e '.image.sha |= "${{ steps.build_gen.outputs.digest }}"' -i chart/ms-general/values.yaml
          yq e '.version |= "${{ env.CHART_VERSION }}"' -i chart/ms-general/Chart.yaml
          yq e '.appVersion |= "${{ env.CHART_VERSION }}"' -i chart/ms-general/Chart.yaml
          echo "DIGEST=${{ steps.build_gen.outputs.digest }}" >> $GITHUB_ENV

      - name: General Update Compnent
        id: updatecomp_gen
        run: |
          export COMPNAME=ms-general
          dh envscript --envvars component.toml --envvars_sh env.sh
          source env.sh
          dh updatecomp --rsp component.toml --deppkg cyclonedx@/tmp/cyclonedx.json

      - name: Nginx Build and Push Docker Image
        id: build_nginx
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
        with:
          push: true
          file: docker/DockerfileNginx
          tags: ${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}
          platforms: linux/amd64,linux/arm64
          attests: type=provenance,type=sbom         

      - name: Sign the images
        run: |
          cosign sign --yes ${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}@${{ steps.build_nginx.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Verify the pushed tags
        run: |
          cosign verify ${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}@${{ steps.build_nginx.outputs.digest }} --certificate-identity-regexp '.*' --certificate-oidc-issuer-regexp '.*' | jq "."
        env:
          COSIGN_EXPERIMENTAL: 1    

      - name: NGINX Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@f055b5e672ed1ea4fd98a276788e4bcb5a64ad17
        if: always()
        with:
          category: nginx
          sarif_file: trivy-results.sarif

      - name: Nginx Generate SBOM
        id: sbom_nginx
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          if [ "$(docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}" --raw | jq -r '.manifests | map(select(.platform.architecture != "unknown")) | length')" -eq 1 ]; then
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}" --format "{{ json .SBOM.SPDX }}" > /tmp/spdx.json
          else
            docker buildx imagetools inspect "${{ env.REGISTRY }}/ortelius/ms-nginx:${{ env.IMAGE_TAG }}" --format '{{ json (index .SBOM "linux/amd64").SPDX}}' > /tmp/spdx.json
          fi
          syft convert /tmp/spdx.json -o cyclonedx-json=/tmp/cyclonedx.json           

      - name: Nginx Update Values and Chart
        id: chart_nginx
        run: |
          yq e '.image.repository |= "${{ env.REGISTRY }}/ortelius/ms-nginx"' -i chart/ms-nginx/values.yaml
          yq e '.image.tag |= "${{ env.IMAGE_TAG }}"' -i chart/ms-nginx/values.yaml
          yq e '.image.sha |= "${{ steps.build_nginx.outputs.digest }}"' -i chart/ms-nginx/values.yaml
          yq e '.version |= "${{ env.CHART_VERSION }}"' -i chart/ms-nginx/Chart.yaml
          yq e '.appVersion |= "${{ env.CHART_VERSION }}"' -i chart/ms-nginx/Chart.yaml
          echo "DIGEST=${{ steps.build_nginx.outputs.digest }}" >> $GITHUB_ENV

      - name: Nginx Update Compnent
        id: updatecomp_nginx
        run: |
          export COMPNAME=ms-nginx
          dh envscript --envvars component.toml --envvars_sh env.sh
          source env.sh
          dh updatecomp --rsp component.toml --deppkg cyclonedx@/tmp/cyclonedx.json
          rm -f env.sh cyclonedx.json syft trivy-results.sarif

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@e040c596f0a65570b339c60818081175bcf82d11
        with:
          commit_message: Update chart and values
      - name: Install Helm
        uses: azure/setup-helm@b7246b12e77f7134dc2d460a3d5bad15bbe29390 # v4
        with:
          version: v3.11.1
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@13fe82a5149cf0b212e16453d25b3c59f2b4d3ef
        with:
          charts_dir: chart
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Rebuild of ortelius/ortelius-charts
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          event-type: generate-main-chart
          repository: ortelius/ortelius-charts
          token: ${{ secrets.HELM_INDEXER_TOKEN }}   
