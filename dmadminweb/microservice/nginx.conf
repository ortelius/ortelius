#user  nobody;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#
#    access_log  logs/access.log  main;

    log_format upstreamlog '[$time_local] $remote_addr to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    access_log  /var/log/nginx/access.log  upstreamlog;


    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  30;

				gzip on;
				gzip_disable "msie6";

				gzip_comp_level 6;
				gzip_min_length 1100;
				gzip_buffers 16 8k;
				gzip_proxied any;
				gzip_types
				    text/plain
				    text/css
				    text/js
				    text/xml
				    text/javascript
				    application/javascript
				    application/x-javascript
				    application/json
				    application/xml
				    application/rss+xml
				    image/svg+xml;
				
				# proxy settings
				real_ip_header X-Forwarded-For;
				set_real_ip_from 0.0.0.0/0;
				proxy_redirect     off;

upstream dh-ms-general-backend {
	       server dh-ms-general.default.svc.cluster.local:8080;
				    ip_hash;
				    keepalive 30;
				}	

upstream dh-ms-docs-backend {
	       server dh-ms-docs.default.svc.cluster.local:1313;
				    ip_hash;
				    keepalive 30;
				}	

upstream dh-ms-ui-backend {
					       server dh-ms-ui.default.svc.cluster.local:8080;
								    ip_hash;
								    keepalive 30;
								}								

server {
        listen       80;
        server_name  console.deployhub.com;
        rewrite ^(.*) https://$server_name$1 permanent;
   }
			
server {
    	listen 443 ssl http2;
    	listen [::]:443 ssl http2;

        server_name console.deployhub.com;
        root /var/www;
		index index.html;
																
    	ssl_prefer_server_ciphers on;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:50m;
		ssl_session_tickets off;
		proxy_buffering on;
		proxy_buffer_size 128k;
		proxy_buffers 4 256k;
		proxy_busy_buffers_size 256k;

    	# intermediate configuration
    	ssl_protocols TLSv1.2 TLSv1.3;
    	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

		ssl_certificate_key /etc/nginx/ssl/deployhub.com.key;
		ssl_certificate /etc/nginx/ssl/deployhub.com.chained.crt;

		include location/*;
	}

server {
        listen       80;
        server_name  docs.deployhub.com;
        rewrite ^(.*) https://$server_name$1 permanent;
   }

server {
    	listen 443 ssl http2;
    	listen [::]:443 ssl http2;

        server_name docs.deployhub.com;
        
		ssl_prefer_server_ciphers on;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:50m;
		ssl_session_tickets off;
		proxy_buffering on;
		proxy_buffer_size 128k;
		proxy_buffers 4 256k;
		proxy_busy_buffers_size 256k;
	
    	# intermediate configuration
    	ssl_protocols TLSv1.2 TLSv1.3;
    	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
									
		ssl_certificate_key /etc/nginx/ssl/deployhub.com.key;
	    ssl_certificate /etc/nginx/ssl/deployhub.com.chained.crt;

		location / {
   			proxy_http_version 1.1;
   			proxy_set_header Connection "";
   			proxy_set_header X-Forwarded-Host $host;
   			proxy_set_header X-Forwarded-Server $host;
   			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   			proxy_pass http://dh-ms-docs-backend/;

   			set $cors '';
   			if ($http_origin ~ '^https?://(localhost|console.deployhub.com|www.deployhub.com|deployhub.com|www..jsfiddle.net)') {
           		set $cors 'true';
   			}

   			if ($cors = 'true') {
           		add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           		add_header 'Access-Control-Allow-Credentials' 'true' always;
           		add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
           		add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
           		# required to be able to read Authorization header in frontend
           		#add_header 'Access-Control-Expose-Headers' 'Authorization' always;
   			}

   			if ($request_method = 'OPTIONS') {
           		# Tell client that this pre-flight info is valid for 20 days
           		add_header 'Access-Control-Max-Age' 1728000;
           		add_header 'Content-Type' 'text/plain charset=UTF-8';
           		add_header 'Content-Length' 0;
           		return 204;
   			}
		}
	}							
}

