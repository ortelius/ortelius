#user  nobody;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;


	map $request_uri $request_uri_path {
	"~^(?P<path>[^?]*)(\?.*)?$" $path;
	}

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#
#    access_log  logs/access.log  main;

    log_format upstreamlog '[$time_local] $remote_addr to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    access_log  /var/log/nginx/access.log  upstreamlog;


    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  30;

				gzip on;
				gzip_disable "msie6";

				gzip_comp_level 6;
				gzip_min_length 1100;
				gzip_buffers 16 8k;
				gzip_proxied any;
				gzip_types
				    text/plain
				    text/css
				    text/js
				    text/xml
				    text/javascript
				    application/javascript
				    application/x-javascript
				    application/json
				    application/xml
				    application/rss+xml
				    image/svg+xml;
				
				# proxy settings
				real_ip_header X-Forwarded-For;
				set_real_ip_from 0.0.0.0/0;
				proxy_redirect     off;

upstream ao-ms-general-backend {
	       server ms-general.ortelius.svc.cluster.local:8080;
				    ip_hash;
				    keepalive 30;
				}	

upstream ao-ms-ui-backend {
					       server ms-ui.ortelius.svc.cluster.local:8080;
								    ip_hash;
								    keepalive 30;
								}								

upstream ao-ms-validate-user-backend {
					       server ms-validate-user.ortelius.svc.cluster.local:80;
								    ip_hash;
								    keepalive 30;
								}	
								
upstream ao-ms-compitem-crud-backend {
					       server ms-compitem-crud.ortelius.svc.cluster.local:80;
								    ip_hash;
								    keepalive 30;
								}	

upstream ao-ms-textfile-crud-backend {
					       server ms-textfile-crud.ortelius.svc.cluster.local:80;
								    ip_hash;
								    keepalive 30;
								}	

map $request_method $dep_pkg_upstream {
	POST    ao-ms-dep-pkg-post-backend;
	default ao-ms-dep-pkg-get-backend;
}

upstream ao-ms-dep-pkg-post-backend {
					       server ms-dep-pkg-cud.ortelius.svc.cluster.local:80;
								    ip_hash;
								    keepalive 30;
								}	

upstream ao-ms-dep-pkg-get-backend {
					       server ms-dep-pkg-r.ortelius.svc.cluster.local:80;
								    ip_hash;
								    keepalive 30;
								}	


server {
        listen       80;
        _  dev.ortelius.io;
        rewrite ^(.*) https://$server_name$1 permanent;
   }
			
server {
    	listen 443 ssl http2;
    	listen [::]:443 ssl http2;

        _ dev.ortelius.io;
        root /var/www;
		index index.html;
		client_max_body_size 100M;																
    	ssl_prefer_server_ciphers on;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:50m;
		ssl_session_tickets off;
		proxy_buffering on;
		proxy_buffer_size 128k;
		proxy_buffers 4 256k;
		proxy_busy_buffers_size 256k;

    	# intermediate configuration
    	ssl_protocols TLSv1.2 TLSv1.3;
    	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

		ssl_certificate_key /etc/nginx/ssl/ortelius.io.key;
		ssl_certificate /etc/nginx/ssl/ortelius.io.chained.crt;

		include location/*;
	}
}

